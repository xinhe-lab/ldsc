import os
import yaml
from yaml import Loader
from typing import Any,IOn
import json
import re

with open('../workflow/ldetect_ch.json') as json_file:
  ldetect_data = json.load(json_file)


regions=[614,15,356,373,353,973,512,181,363,362]


def host_loader(loader: yaml.loader.Loader,node: yaml.Node) -> Any:
    fields = loader.construct_mapping(node,deep=True)
    options=fields['options']
    # print([options[name] for name in options.keys()])
    ret_opt = [name for name in options.keys() if os.path.exists(options[name])]
    # print(ret_opt)
    return ret_opt[0]


def dep_loader(loader: yaml.loader.Loader,node: yaml.Node) -> Any:
    options = loader.construct_mapping(node,deep=True)
    host = options['host']
    pref = options['pref']
    # print(pref)
    host =options['host']
    path = options['path']
    full_path = pref+path[host] if pref is not None else path[host]
    return full_path

yaml.Loader.add_constructor('!Host', host_loader)
yaml.Loader.add_constructor('!Dep', dep_loader)


with open("../workflow/config_base.yaml") as stream:
    config=yaml.load(stream,Loader=Loader)

config_d = config['paths']
config_e = config['envs']
shell.prefix(config_e["cmd_prefix"])



def anno_files(anno):
  return expand(config_d['BED'] +"{anno_name}.bed",anno_name=anno)

with open("../workflow/annots.yaml", 'r') as stream:
    all_annot = yaml.safe_load(stream)
      #(all_annot)

wildcard_constraints:
      chrom="\d+",
      gwas="[fgdptb]+",
      full_anno_name="[a-z]+",
      new_base="[a-z]+",
      region_id="\d+"

localrules: all,get_hm3_snplist,get_plinkfiles,get_frq,get_weights,get_narrowpeak_aorta,get_narrowpeak_finte,get_narrowpeak_liver,prep_covars

#include: "h5_gwas_snakefile"
include: "dl_snakefile"
include: "eqtl_snakefile"
#include: "gwas_snakefile"
include: "plot_snakefile"
include: "ldsc_snakefile" 


rule all:
    input:
        expand("results/plot_data/genes/{region_id}.RDS",region_id=regions)
