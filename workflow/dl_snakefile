# rule get_hic:
#     output:

#     shell:
#         "curl --digest --user {params.username}:{params.password} https://mnlab.uchicago.edu/mod/download/hi-c/DT1_dTL4_D_48h.ibed.bz2 --output {output}


rule get_gest_dur_gwas:
    output:
        temp(config_d['GWAS']+"fetal_gest_duration/Fetal_gest_duration_NComms2019.txt.gz")
    shell:
        "wget http://mccarthy.well.ox.ac.uk/publications/2019/EggGestationalDuration_NatureCommunications/Fetal_gest_duration_NComms2019.txt.gz -O {output}"

rule mv_fgd:
    input:
        config_d['GWAS']+"fetal_gest_duration/Fetal_gest_duration_NComms2019.txt.gz"
    output:
        temp(config_d['GWAS']+"input/fgd.txt")
    shell:
        "zcat {input} > {output}"


rule mv_ptb:
    input:
        config_d['GWAS']+"meta.stat"
    output:
        temp(config_d['GWAS']+"input/ptb.txt")
    shell:
        "cp {input} {output}"        

rule get_hm3_snplist:
    output:
        temp(config_d['DL'] +"hapmap3_snps.tgz")
    shell:
        "wget https://data.broadinstitute.org/alkesgroup/LDSCORE/hapmap3_snps.tgz -O {output}"

rule get_narrowpeak_aorta:
    output:
        config_d["BED"]+"chip-seq-reproducible-aorta-{mark}.bed.bz2"
    params:
        mark="{mark}"
    shell:
        "curl https://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/narrowPeak/E065-{params.mark}.narrowPeak.gz | gunzip -c | bzip2 -c > {output}"



rule get_narrowpeak_finte:
    output:
        config_d["BED"]+"chip-seq-reproducible-finte-{mark}.bed.bz2"
    params:
        mark="{mark}"
    shell:
        "curl https://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/narrowPeak/E085-{params.mark}.narrowPeak.gz | gunzip -c | bzip2 -c > {output}"


rule get_narrowpeak_liver:
    output:
        config_d["BED"]+"chip-seq-reproducible-liver-{mark}.bed.bz2"
    params:
        mark="{mark}"
    shell:
        "curl https://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/narrowPeak/E066-{params.mark}.narrowPeak.gz | gunzip -c | bzip2 -c > {output}"


# rule get_broadpeak_aorta:
#     output:
#         config_d["BED"]+"chip-seq-reproducible-aorta-{mark}.bed.bz2"
#     params:
#         mark="{mark}"
#     shell:
#         "curl https://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/broadPeak/E065-{params.mark}.broadPeak.gz | gunzip -c | bzip2 -c > {output}"

rule gunzip_hm3:
    input:
        rules.get_hm3_snplist.output
    params:
        dld=config_d['1KG']
    output:
        expand(config_d['1KG']+"hapmap3_snps/"+"hm.{chrom}.snp",chrom=range(1,23))
    shell:
        "tar -C {params.dld} -xvzf {input}"

rule merge_down_up:
    input:
        input_down=config_d['BED']+"{chip_atac}-seq-dec_down-{mark}.bed",
        input_up=config_d['BED']+"{chip_atac}-seq-dec_up-{mark}.bed"
    output:
        bedf=config_d['BED']+"{chip_atac}-seq-dec_diff-{mark}.bed"
    conda:
        config_e['r']
    script:
        "../scripts/merge_diff.R"

rule merge_split_hic:
    input:
        inputf=config_d['BED']+"DT1_dTL4_D_48h.ibed.bz2",
    output:
        bait=config_d['BED']+"hicd-seq-bait-dec-HIC.bed",
        target=config_d['BED']+"hicd-seq-target-dec-HIC.bed",
        both=config_d['BED']+"hicd-seq-both-dec-HIC.bed"
    conda:
        config_e['r']
    script:
        "../scripts/merge_hic.R"

rule get_cadd:
    output:
        temp(config_d["DL"]+"whole_genome_SNVs_inclAnno.tsv.gz")
    shell:
        "wget https://krishna.gs.washington.edu/download/CADD/v1.4/GRCh37/whole_genome_SNVs_inclAnno.tsv.gz -O {output}"

rule get_spidex:
    output:
        temp(config_d["DL"]+"hg19_spidex.zip")
    shell:
        "wget http://www.openbioinformatics.org/annovar/download/IlvUMvrpPT/hg19_spidex.zip -O {output}"
rule get_baseline_model:
    output:
        temp(config_d['DL']+"1000G_Phase3_baselineLD_v2.2_ldscores.tgz")
    shell:
        "wget https://data.broadinstitute.org/alkesgroup/LDSCORE/1000G_Phase3_baselineLD_v2.2_ldscores.tgz -O {output}"

rule get_weights:
    output:
        temp(config_d["DL"]+"1000G_Phase3_weights_hm3_no_MHC.tgz")
    shell:
        "wget https://data.broadinstitute.org/alkesgroup/LDSCORE/1000G_Phase3_weights_hm3_no_MHC.tgz -O {output}"

rule gunzip_weights:
    input:
        config_d["DL"]+"1000G_Phase3_weights_hm3_no_MHC.tgz"
    output:
        ldfiles = expand(config_d['WEIGHTS'] +"weights.hm3_noMHC.{chrom}.l2.ldscore.gz",chrom=range(1,23))
    params:
        W=config_d['1KG']
    shell:
        "tar -xvzf {input} -C {params.W}"        

rule get_frq:
    output:
        temp(config_d['DL']+"1000G_Phase3_frq.tgz")
    shell:
        "wget https://data.broadinstitute.org/alkesgroup/LDSCORE/1000G_Phase3_frq.tgz -O {output}"


rule get_plinkfiles:
    output:
        temp(config_d['DL'] +"1000G_Phase3_plinkfiles.tgz")
    shell:
        "wget https://data.broadinstitute.org/alkesgroup/LDSCORE/1000G_Phase3_plinkfiles.tgz -O {output}"

rule gunzip_plinkfiles:
    input:
        config_d['DL'] +"1000G_Phase3_plinkfiles.tgz"
    output:
        fam_files = expand(config_d['1KG'] +"1000G_EUR_Phase3_plink/1000G.EUR.QC.{chrom}.fam",chrom=range(1,23)),
        bim_files = expand(config_d['1KG'] +"1000G_EUR_Phase3_plink/1000G.EUR.QC.{chrom}.bim",chrom=range(1,23)),
        bed_files = expand(config_d['1KG'] +"1000G_EUR_Phase3_plink/1000G.EUR.QC.{chrom}.bed",chrom=range(1,23))
    params:
        KG=config_d['1KG']
    shell:
        "tar -xvzf {input} -C {params.KG}"

rule gunzip_frqf:
    input:
        config_d['DL'] +"1000G_Phase3_frq.tgz"
    output:
        fam_files = expand(config_d['FRQF'] +"1000G.EUR.QC.{chrom}.frq",chrom=range(1,23)),
    params:
        KG=config_d['1KG']
    shell:
        "tar -xvzf {input} -C {params.KG}"


rule gunzip_baseline:
    input:
        config_d['DL'] +"1000G_Phase3_baselineLD_v2.2_ldscores.tgz"
    output:
        ldfiles = expand(config_d['L2'] +"baseline/baselineLD.{chrom}.l2.ldscore.gz",chrom=range(1,23)),
        annotf = expand(config_d['L2'] +"baseline/baselineLD.{chrom}.annot.gz",chrom=range(1,23)),
        m50 = expand(config_d['L2'] +"baseline/baselineLD.{chrom}.l2.M_5_50",chrom=range(1,23))
    params:
        L2=config_d['L2']
    shell:
        "tar -xvzf {input} -C {params.L2}/baseline"

rule unzip_annot:
    input:
        config_d['BED'] + "{annot}.bed.bz2"
    output:
        temp(config_d['BED'] + "{annot}.bed")
    wildcard_constraints:
        annot="[^/]+"
    shell:
        "bzip2 -cd {input} > {output}"
